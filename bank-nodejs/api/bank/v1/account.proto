syntax = "proto3";

package bank.v1;

import "rbt/v1alpha1/options.proto";
import "rbt/v1alpha1/tasks.proto";

import "bank/v1/errors.proto";

////////////////////////////////////////////////////////////////////////
// State machine definition.

message Account {
  option (rbt.v1alpha1.state) = {
  };
  string name = 1;
  uint64 balance = 2;
}

service AccountMethods {
  rpc Balance(BalanceRequest) returns (BalanceResponse) {
    option (rbt.v1alpha1.method).reader = {
    };
  }

  rpc Deposit(DepositRequest) returns (DepositResponse) {
    option (rbt.v1alpha1.method).writer = {
    };
  }

  rpc Withdraw(WithdrawRequest) returns (WithdrawResponse) {
    option (rbt.v1alpha1.method) = {
      writer: {},
      errors: [ "OverdraftError" ],
    };
  }

  rpc Open(OpenRequest) returns (OpenResponse) {
    option (rbt.v1alpha1.method).writer = {
      constructor: {},
    };
  }

  rpc Interest(InterestRequest) returns (InterestResponse) {
    option (rbt.v1alpha1.method).writer = {
    };
  }

  // An async task to send a welcome email to the customer.
  rpc WelcomeEmail(WelcomeEmailRequest)
      returns (WelcomeEmailResponse) {
    option (rbt.v1alpha1.method) = {
      writer: {},
    };
  }
}

////////////////////////////////////////////////////////////////////////

message BalanceRequest {}

message BalanceResponse {
  int32 amount = 1;
}

////////////////////////////////////////////////////////////////////////

message DepositRequest {
  uint64 amount = 1;
}

message DepositResponse {}

////////////////////////////////////////////////////////////////////////

message WithdrawRequest {
  uint64 amount = 1;
}

message WithdrawResponse {}

////////////////////////////////////////////////////////////////////////

message OpenRequest {}

message OpenResponse {}

////////////////////////////////////////////////////////////////////////

message InterestRequest {}

message InterestResponse {}

////////////////////////////////////////////////////////////////////////

message WelcomeEmailRequest {}

message WelcomeEmailResponse {}

////////////////////////////////////////////////////////////////////////
