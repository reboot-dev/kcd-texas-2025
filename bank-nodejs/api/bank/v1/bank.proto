syntax = "proto3";

package bank.v1;

import "rbt/v1alpha1/options.proto";

import "bank/v1/errors.proto";

////////////////////////////////////////////////////////////////////////

service BankMethods {
  rpc DepositToAccount(DepositToAccountRequest)
      returns (DepositToAccountResponse) {
    option (rbt.v1alpha1.method).transaction = {
    };
  }

  rpc Create(CreateRequest) returns (CreateResponse) {
    option (rbt.v1alpha1.method).transaction = {
      constructor: {},
    };
  }

  rpc SignUp(SignUpRequest) returns (SignUpResponse) {
    option (rbt.v1alpha1.method).transaction = {
    };
  }

  rpc Transfer(TransferRequest) returns (TransferResponse) {
    option (rbt.v1alpha1.method) = {
      transaction: {},
      errors: [ "OverdraftError" ],
    };
  }

  rpc AccountBalances(AccountBalancesRequest)
      returns (AccountBalancesResponse) {
    option (rbt.v1alpha1.method).reader = {
    };
  }
}

////////////////////////////////////////////////////////////////////////

message Bank {
  option (rbt.v1alpha1.state) = {
  };
  repeated string account_ids = 1;
}

////////////////////////////////////////////////////////////////////////

message DepositToAccountRequest {
  string account_id = 1;
  uint64 amount = 2;
}

message DepositToAccountResponse {}

////////////////////////////////////////////////////////////////////////

message CreateRequest {}

message CreateResponse {}

////////////////////////////////////////////////////////////////////////

message SignUpRequest {
  string account_id = 1;
  uint64 initial_deposit = 2;
}

message SignUpResponse {}

////////////////////////////////////////////////////////////////////////

message TransferRequest {
  string from_account_id = 1;
  string to_account_id = 2;
  int64 amount = 3;
}

message TransferResponse {}
////////////////////////////////////////////////////////////////////////

message Balance {
  string account_id = 1;
  int32 balance = 2;
}

////////////////////////////////////////////////////////////////////////

message AccountBalancesRequest {}

message AccountBalancesResponse {
  repeated Balance balances = 1;
}

////////////////////////////////////////////////////////////////////////
